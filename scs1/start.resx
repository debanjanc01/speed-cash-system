<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        28uggEsAAAAASUVORK5CYII=
</value>
  </data>
</root>