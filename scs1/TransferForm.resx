<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEAAAAAAAD/2wBDAAYEBAQFBAYFBQYJBgUGCQsIBgYICwwKCgsKCgwQDAwMDAwM
        EAwODxAPDgwTExQUExMcGxsbHB8fHx8fHx8fHx//2wBDAQcHBw0MDRgQEBgaFREVGh8fHx8fHx8fHx8f
        Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx//wgARCAGQAu4DAREAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAQFAgMGAQf/xAAZAQEAAwEBAAAAAAAAAAAAAAAAAQIEAwX/2gAMAwEA
        AhADEAAAAbbz8oAAAAAAAAAAAAEHpbjNmgAayuiQBZ0p9Dx5wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAIPS3GbNAA1ldEjI6eYq+dfoOPOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABB6W4
        zZoAGsrokbDsJig51+g484AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFf0tx2zQANZXRI2n1W
        Y+dc6/QcecAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACv6W47ZoAGsrokDoJiJzr9Bx5wAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK/pbjtmgAayuiRsO/mOR51+g484AAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEDpbmNmjAGs1FXEgC1pT6DjzgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAADq9neZ0sBqK0GB4VWXjo40AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHRau0+/XJ
        YjAr5geTGKtbm5RONAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALaPSlRpAAjTnqJ8wAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6j1t0dQANE8aafKAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAG10u6+uAABR28fWoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPjbYxuA
        AAgTirpwgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXEepIjuAABgpRW8cAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAC8r7GxcAAAVM+ZFnOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAB6X9faJAAAEac9RPmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbXS7r64AAAApreVocQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJjRbx6YAAAAjzwp58sAAAAAAAAADbGna0RpweKgA
        AAAAAAAAAAAAAAAAAAAAAAAAAACdGuyj0AAAAAKmfMiznAAAAAAAG+NG6O+ueWpyzd5Meh5NYrz9U5QA
        AAAAAAAAAAAAAAAAAAAAAAAAAALKN86NgAAAAGpypLeSAAAAAAAN8aLKnqAeHksTGWic8SfO8UAAAAAA
        AAAAAAAAAAAAAAAAAAAAAt49OTGgADFSunFFnNIjvax6QFbPnwZyAAAAAaIiOaLW30raTpt49LJIAGqJ
        wNFqxZ83UzgAAAAAAAAAAAAAAAAAAAAAAAAAC8r6+x0AGKtLbydagE6NllG8Yq0FvH9QAAABDiLzv16r
        T1pZm4rHIZeOfHdaNQAGJqrOizEgW8XxUAAAAAAAAAAAAAAAAAAAAAAAAAC6j1t0dQBBnHWzgA9KysXk
        abGd2x0pYw11sUyZAAA1omdOnbbO4HJnRnF4eF3z9XYuQSBhDQnTKDbx8XMAAAAAAAAAAAAAAAAAAAAA
        AAAACVGq2j0QBAnFXThHpfaOtNl466Vq7TshZRFdM77zumQABDiOz2aLfrfUcaWR0pzvDnzeXhImclru
        vrZrgaomLKDbycHEAAAAAAAAAAAAAAAAAAAAAAAAADa02tfS3AGtzo7eQPSPC1iKWsem43xHhX3tPtIA
        AgxFtu1dteY58zPo5NPnvKmrHnkzImxqs49EARE1tvJwcQAAAAAAAAAAAAAAAAAAAAAAAAANjRPr6ktG
        QBVz50Ocu2UOsTeddZFmYkrCI3wq72sLSAANERe6O3Uaeo8OdOjOMycIHKmwHqb2vsZLAYlLby9bgAAA
        AAAAAAAAAAAAAAAAAAAAAABsd5lfVkQ3zHoPER54Dnq4Z1c8CZwNZPRinTeZcyAABBh2enXJroztWT15
        U9OPH5OE6ZAF3X1trqAIM462cAAAAAAAAAAAAAAAAAAAAAAAAAAGbrNr6+yG43TAAEJw52vlWkViTO6I
        9Ku1rK8+gAAHhprfpnr+pTHPx5vls/oBsXvK+uSANbnR28gAAAAAAAAAAAAAAAAAAAAAAAAAASI3yY27
        6s5bJgAeFWw0bDlWPJezM205gAAAAsY3T42jxFTPmRp4DNa3j090dgAI88KefLAAAAAAAAAAAAAAAAAA
        AAAAAAAAA2O8uvo7Y6ZGUPQCNbLX283wHoAAAAAMk3dfXzXGKtfOHc6y40+rAACHOSrnzwAAAAAAAAAA
        AAAAAAAAAAAAAAAAATJjfvjYRCnyNrrsjr6QrYQAAAAAABNjXZx6AAAAAArpwQJxgAAAAAAAAAAAAAAA
        AAAAAAAAAAAADN1kRviT5YAAAAAAAAAF3X1trqAAAABUz5kWc4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAEqNFtHpgAAAAUtvJ0uQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuY9XfHYAAAAU
        FvF8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJMaLePTAAAAwUoreOAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAALyvsbFwAABonjTT5QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AsI22EbgAABDnLVz5wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzXva+uSAABVz50OcoAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFvHpyY0AAAiht4+KoAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAEuNNrHpAACNOeonzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIdrivq
        gACBOKunCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABba+2S0iO4yiZgPInQ41tc9XxoAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL/0NPoBsLMAFbypzWTiAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAABT9L0ezvmemRtLUyMjI01rOxcN0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAOe7dOR099hEBlKzQAB2+LNKpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA57t0hau004q
        JGUrNAAHb4s0qkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADne3Sm1dpZzMSMpWaAAO3xZpVI
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHOdunPau0kpIkZSs0AAdvizSqQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAOc7dI+rtanz+JGUrNAAHb4s0qkAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADnO3TjdPf0xBlKzQAB2+LNKpAAAAAAAAAAAAA//EAC4QAAEDAQYEBgMBAQEAAAAAAAIB
        AwQABRAREiBgEzAyNAYUISIxUCMzQBYVJP/aAAgBAQABBQL+ub2uhzo0Wb3u05va6HOi4BIymeHZsWLZ
        ffbTm9roc6LmzJs5viZ6TEsvv9pz+00OdFzKArtrWZZbdl2X3+05/aaHOi+TZNqsxbL7/ac/tNDnRc2a
        tuT/ABMw/Bsvv9pzkVYqRZS15d+uA/XDcpxs8miy+/2pE7e9zouyBWQKkNti5tSNIZFlHm1TiBWcKMhy
        3Y1nGpPXtWN+vTI/Vtdocrel5MW9rNDmPW4OU9qxR5EodrMJg1rMcw7VD0DkSBwPaafPJfDMG02kxc5T
        wZT2lHT8vKeDMH8raepN0qKn3cVPdy3wyl/A0CEqx0pWDpWzSm/mlRFom1T7qKnt5bgZx/gZLA9GCVlr
        KtE3jSoqfcR0/FpIkFDkrSmS0w7lW+S368s3RGuI6ai8+snjOCrHCdpA9MqVlSsErBKypcqUqY0QYfbt
        pgGhVREM1Nb2HsLyFCRfQ+S67UGyMyA2AI1ZpBbDrLTqTrLJiocriJpVLl+aX5+1aLM3olL7b8PQjJxY
        zhgPFbutBrGmnceQZZRsiLxXb7XtkmDj8fy9oMeVlAYmOkkovii6vtY54FolJ6XJhUVmKTPAZaozEEdd
        4lNP5ERUVJDeCtlmHVIX0svIMOnXQaan+IQJux7HGGNWzwyjML7KElFQJCG9UpaPq+1b6gL0vcHMFyet
        NGQPLwuFKxxZcaQVaacoAyC6mLcdfXVKTEbLsGz0SpAG5H/502wzhzGJbFWjYFnsNMdF0Y8C0GlH1fat
        9Q/KLokN4FTbhNkr5uy6LIqLFGjbNumDUxLpj9Wp0cQsSQmS5URUg2MMKbVtSMzgJgNyLgqLil5JijnX
        9q31Ui6FRFTy7VeXaqU3wZCKipIaXEJJCjjpOUw2oDIPAI4+3Wudl2NaTbzfmlpJSULglU+0gYRoVItD
        X69Elv0+1DqoaRdUqPxm23FbJFRUfaUlaDKBuCCe500TDkKmNNiTTqLilzsJALQAZi0ufr+2Fy9FrFLs
        UrFKxSpQMOVldBfMu1xnSoWSWhFBTlRnNDzWRbhAiVptATS+v4vtxNUoTrNWZNL4+3niqookhDcqIqeV
        LEYwJSIia5S+z7kXL85JSPnSSKJ4VH+CM5gvMlL6/dCSpXETD+Vs84cuSv5Noxzyny3lxc2kyeYOUq4r
        tKOeU+Sa4DtQCzDyHl/FtSKXJkr7NqAWUuRJLE9qxyxb1kuJbVjFg5qkFg3tZj9uqV8bV8u1QsAJXCmJ
        cAa4A1wEpyGJ1Jhi03tRPi8OvRP7fadpyHWGEt+0kr/QWjSeIbQr/R2hTfiSeh/6WdSeJplf6aXSeJpN
        PeIXnQaPO1tK2+1ZYefckxJEY7h6tMXt9pW32vh+0I8OV4jtOLLW4erTF7faVtr/AOaybMK0JFs2N/z7
        x6tMXt9pW328C0H4L9pWtInlcPVpi9vtK2+38NsRXp/imNDavHq0xe32lbfboqopERLcPVpi9v8A1f/E
        ACwRAAEBBgMIAwEBAQAAAAAAAAECAAMEETAxEiBgECEiMkBBUHETUWEUQlL/2gAIAQMBAT8B6tF6S7aU
        Reku2lEXpLtpRF6S7aUReku2lEXpLtpRF6S7aVRai80qlQkyUk2b41NgLYC2A/TYCxDTZd9LQvJmieTT
        DlOFOZ+maDpd0nEqg9RhVLS0Im5oRaO+locSRQWnEJaWdjhFGJRJXvSgFKIRiT60o6E1Cm/d4VaThhx0
        37vEn96aFRNXpnsKDbcyklN/NwY3mpEO8J/D0MO6CzvYwY7FjCKYuFjs0IZKlsWgKuz2GKbbx5qEG41H
        qMQl0MKuSvdB7DhX4WWgpv5iGHBmUsJuy4s9mKybtDvsO42yRTvvWwnY6dJV33sncKCkhV2fQ5Tv7eXd
        CSRlUqQmzx4VHJDv5bjtUmYkykyMqaXf3tIZSJWaHfYtxvSWJGXlnKppyxat0szmKw7jZkvknvsiwL96
        TtOY8JmGSoETovuc+WhFcUssYLHIkBlVkWzPBu2pUUmYZC8Qnmf858tC8+V4jEmWScm3SYVUmYzLMhkh
        VyMvvNEc58tC8+aJdyM/vYCyjPbOo7OZ4cgMmSZieWJ5z5aG5xmIm38yG/mQz93hV+dA5GNvgYuGUghl
        Llmc8oyxTv8A15ZyeMUX7rGP1iK7teEzYHYQz9xh3i2V2jEZZnvKfXl3MT2VRiMBvfoIV5/naQz9zhP5
        tQgqszp0EDNEHgPmHT8p9Mh4FWzxSJpn9dAlUjNkKxCe1SZiTfyFkwie+9gAM8WeHzIMrM6iv+thE2Dx
        Q7sIpbCM+wzyJSpJHQwryRlVjDbzbt8UemESkifTOl4hOpFHi0lDPMJ91Hx4zpNw8xJpqMzpOGXJXuks
        yB0q7ViE6L88B0rCL7UYs8OlXasJnRilcUvrS0MuafVBSpmeloVUlS+88SqSfel4fnGeM7aWwBkDCZt8
        5b5y3zlvnLfOW+cs9VjZSJaeXbSiBOkRNjpN3emq+k3d6ar6Td3pqvpN3TVfSbumq+k3dNV+r//EACsR
        AAAFAwMDAwQDAAAAAAAAAAABAgMRMDFgEyAyEBJAIUFRFFCAkCJhcf/aAAgBAgEBPwHy2+VJzjijfKk7
        xxRvlSd44o1ypO8cUa5UneOKNcqTvHFG+VJ3jirfGi9fFULKBqJGokd5DvId5fI7y+R3EO4g9f8AG86B
        forPzTEiRP34/NPdInE56dionpOMmG2fkEUdDSRhxmLYMW0zE7COiyifXc6iDwUtiEpgKIvbaVAw0X8d
        z5egLCJiQcR/YLaVBByW51UECwA95HAWqes7C3mGFe259XthkbCoWGuUD6gE+ErIw47H+4GdUqUYhAgQ
        IxSNxeLNEvv0CBHnF+io/wAgCxbRSNEhoJGgQ0CGgQ0CGgQ0AtqCx562KNpk6SkyFFB4mzemu+Js3prv
        ibN6a74mzemu+Js3prvibN6a7+X/AP/EAD4QAAECAgYFCQYFBAMAAAAAAAEAAgMREBIgITFgMEFRcYEE
        EyIyUGFykcEzQKGxstEjQlJi4QUUkvCC0vH/2gAIAQEABj8C97iWTZhb/TKkSyaQ1t7nGQC59zmuDeu1
        uIUPj9JypEsmlr29ZpmOCdAEEQy8Se+c/IKHx+k5Ufw+dk0sDzJhcKx7lEc2G2GWD8N4xnqv1zUPj9Jy
        o/h87JsCLGaeaGqc6vBQ+P0nKj+Hzsmlrxi0gjgnwYcJwixBVM5SE8VD4/ScqPAEzd81MQX/AOJXs3eR
        Xs3eRXVKPRNmHx+k5VZYNPVC6oQLWgXahlVrS6RUw5YrFG+xiEN2XDlgC0crgaAjKxdw0AdwysO/QEZW
        bu0M9uXu8ZUbv0fccMvd4w93u7cJ0k9R9xM1caMLF3bROkl5e479BsPbItTK6NyvKkerYrDXjpNpUmDy
        vTuThr+dYKzhV1f6VJwVz5O/SsZ6Hu7XbuszKmbFV2Go0yKLPzDRVRxQico4Q/uqrGho2BR+X15tisqV
        P8f+qlEaHDvXOwJlgxGsKo7rj45AFkDbYcdTRMqQ8lVeZ7O5dYUCI3ra1Vd56AlGM+9rMPFYHJORjnOW
        vuljV/lM/uJGNV/ElhNB8O5ruk31CDhr0J7W7jZaab7lFFetMSfqkEebfX75SUyhdKSkQphVhgdAAoYm
        Juv86HRYhkxgrOPcEyF/TfxuUx+rIdX+UYsU85yyJ7SJjKeoUAzFZjqZhTtHtsimSis/X0TwP8ISnXvm
        hsUjcdqmD5KSIRFsbFA5W2vzjeljdMURGMIa9zSGk3i9M5ayUdkpRwBhP/cUI0EzafMHYaDGbXrl1wJu
        22Ku20e3KwwNAc3Uqztpok5dEr1V+IRR3W9ydAOI6TfWmRvBxCixoMQiBEHsO+hsFv5L3bygKZoHbZPb
        kisFgrsMQphVhxUiJqUuCvxKlrKnt0AiMulgsPxB1mrqq8K4osh9KN8lzjr7Ld1muOPaw0P7h1VVdgph
        CqgDir/LRh7LxrHcp01sWbLMrTt3a8job5h+1XfCi74KblIaOoeFj9tMgu/WbR7Y7ldbns9wmFMUyKxu
        V96utjf21fTjReER7jV24aVoylPz0m7KUtR0jsp9+vRk5TlqOiJ7sqg6F2VS3joZbcqg6GWzK27QE7cr
        S229+VxbbleYpAoxWKHSwVYOnlkWeOVGvhmRLpfArrg/8QsW+S/IeCwZ5fyh0YZ4H7rqQvJ33V8OH8fu
        vZM+P3V8FnxVUwmjimv/AFCeU2+MfIoQ4TS95wAVSPDMN2qdI32ofhGU2+MfIpxj3MiNq19ihM5Oa/Nz
        Jfv1Ckb7UPwjKbB+/wBCjDrVGNFZ7kxzX14b7r7iCKRvtQ/CMps8XoudhSwk5pwITecAaxnVY2kb7UPw
        jKbPF6KUcB0mkw2uwJ/8UF0JrWRnTm1t3R2ypG+1D8IymzxeimLipuMztNI32ofhHvf/xAArEAEAAQID
        BgYDAQEAAAAAAAABEQAhMUFRECBgYXGBMFCRobHwwdHxQOH/2gAIAQEAAT8h/wBftD5PC3uny4U9ofJ4
        GE6A1S2CkBMFjA53CYz4V89ofJ4GUuBPzUlRJBZyMyAierwrZ9Ll8DQtsaabvYqYPG3WRmyr8K2fa5fA
        wKwXXAqwV63wwJnbHtwrZ9rl8DRz36wlSVkaNtZCMvKxwrYuJLAu4aEkBwT9FIsM59sK+3fiv4DX4sNY
        WeGbPbPy7/8A5hX8wp6PmAzeFTtiMl9aiyTWuRrlaeQFjagJWDVr+sUxiZ/6eFsHq73xPnhjXLF77znM
        S/pwvoNMvQ8DRkw6cLXu08CyOV3C3rh4AK5lIjDicKmBoPBt7C/vnwoJBr4UzGqcKQDk9vDlg1OE0w5C
        +HPRrf5k03Khb2OlIQked9JEev8APEtrX75/4QzIV+w0LBGsWfa9WsbLsEhKuFx511sx6f3xCXP8qRGH
        Ex/wFA4WbvKpNNBUHIfOIOZLvSxgpdjDVxrG1rVt7bkGS9zxLJ2Ci+F0EvzUC18iUXjHJlWYIxEho201
        BD2veogK5tocquVTQkNTHOgENPeX83RLk3XeEVl0yNNzFfwNqHCaYgwsJ4TGrmoJSDfAfz7VyuiRUaYY
        jcQEzXoGp8OVELXD3GcytObHR+96Q57DGwIRo+bEnMIepuw6tL23D/igkPzUd7ZftQOFO7k50W7C4Cx8
        0I4XoskWJjGT2rmjLwGsmVGCk2ueL2x3JhnACEtT4d2jBUBLGjeKX2wl+nanOsR9d7MoT0bPeebJH1jd
        6RkdoTdDXGoYb16rP1mp2J5sDSvTKVMwEveiuwnEo0kjhWTeJ1qNXEs7/Wj8UDN6ZJMr9bJtHaAJcKTL
        BNMVrj7Hq2xxEwTmFH3c9hCsDMm9kqTpY2BXhKFHPci6UIY84XNB3NWXDrSRbYFAutgp42ZH0X4RTtdy
        4kZcqMvR70aHVhjTEIc7aKCqc66NSdq7SnfEjike9KwkAJuowgzNhzxLgRBI4lW7bJgsluGHVjasxfzu
        AyTY+cHA3LLKctaPrdsw8MPXcSajfN9g0o6qmOe53oeuzHIU4FMnLgWCC8Ftk4hGi0y8PW9OCvQV0SFp
        w/Jr6nPfm9bqUnc7Lg7O1+YKEuI5NQV322JzMzgZWz2C6k/UuxXLzHagDEuURmAncs1FAfNsHZgJQybU
        QSOJX2LX2LTSY8fn96N4TVj5GgGBMHCkQQMheuoQlF9qVAu128CS8lL0dKEJD+yOlch61mU6X/Va3aZ0
        tAloxOd58qXLJZlxXXdKTboHMHs82UbB5VA8t4oDXX470+NJXMxqVEmtLgOdMQMc+tThXyzUX735FAAM
        DwAENxqwkdeWNAAwbm1yFXDR13WM93lQAQYG7G5q+PN/3NDDNF6js4VzKk1rmVzq51OYHgT51q9TjWgF
        mHqU2y9FLyRrONQQg8OYcQvtIJDccSlkMWHLltiTNQsut4i5sHv5xzHRRJd2o1lFEm4Dr7EHjC8YohhO
        12EjV5bo1rFL7ShYEGhv2LXzkKMmNC2t57EkijBOg4w9a/4NFyZdf8Nx4e54vrB87wfDShU5mX+UUZMS
        iDPh1eJJHQH54SujR75eJIuceluE4ZcFvDc5GeE7i0e+XhchlwphXO0v18GL0PXhXFej8+DGdT44V5et
        +lY+BE6fu8LQw42/rfUCXAp9ZTwsmgPxffljO398L/P+Hf8AmcLdb1oJNJtBDBa5rXMVzVGyRSRS4ITX
        hXA3Pe7uN0cKRMlag2kz6V8wvwRX8/Q8Xqfqlf0dJIuDH8Z2ccyNID+ewbNDoj91GaSMiypmiEIdeFHW
        EHNy0GUCRmNRLO327e+s04UdZD0JM5m4XhjKotiw0yYkOV9vt299Zpwn1AH0/ZREwkJYmADVpFeeEaAd
        Z2+3b31mnCf2+arwy4pRe8RpTZNl5F8VXFtt9u3vrNOE/t81Icfqgpk2YkxVqlBSQzDnnt9u3vrNOE/t
        81AEguJjUv74pL77fbt76zT/AF//2gAMAwEAAgADAAAAEAAAAAAAAAAAAAANtmkkwAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAANtmlrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANtmkjAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tmlpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA9tmljAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tmkjAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAABBlvklAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGSb+/wAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEdX2wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAHbbEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATbbAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAbbbKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADbbbZAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbbbb0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADb
        bbbMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF7bbbUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADbbbbYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbbbbbaAAAAAAAAAADoAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAPbbbbbIAAAAAAAAc78YAAAAAAAAAAAAAAAAAAAAAAAAAAAAXbbbbbe
        gAAAAAACtvHkQAAAAAAAAAAAAAAAAAAAAAAAAAAAXbbPlLZgAAAABlsgmQy0gAAAAAAAAAAAAAAAAAAA
        AAAAAAAPbb0ALZUAAAAEWZ3bbR1AAAAAAAAAAAAAAAAAAAAAAAAAAATbagDQnqgAACqSGN57Zv0AAAAA
        AAAAAAAAAAAAAAAAAAAAAJbZgZ5l98AACuCiJiLbDwAAAAAAAAAAAAAAAAAAAAAAAAAAC7ZwJDaP8AAD
        6CyMgPbKUAAAAAAAAAAAAAAAAAAAAAAAAAASnbIczg1sAADqQCGAD7ZQAAAAAAAAAAAAAAAAAAAAAAAA
        AADybKldP2UAAATI+0AB7bAAAAAAAAAAAAAAAAAAAAAAAAAAAD+Lba5hvAAAABbTQAF7bIAAAAAAAAAA
        AAAAAAAAAAAAAAAADPySCOeuAAAAAXbsCnbbUAAAAAAAAAAAAAAAAAAAAAAAAAAAD+ttgSAAAAAAH7dl
        7bbEAAAAAAAAAAAAAAAAAAAAAAAAAAACJPBMAAAAAAADbbbbbbMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        wAAAAAAAAACvbbbbbcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPbbbbbAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAACbbbbbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADbbbbbgA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbbbbaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAPbbbaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAR7bbZAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAbbbOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbbbAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7bbIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAO+7nfgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAT/skmgAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAADU23ZK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJJTbbEAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACEpTbbEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWpT
        bbEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0pTbbEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABkpTbbEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrJTbbEAAAAAAAAAAAAD//E
        ACsRAQABAgQFBAEFAQAAAAAAAAERADEgITBgEEFRYbFAUHGhgZHB0eHw8f/aAAgBAwEBPxD1djSu7Usa
        M1f2pY0Yq/tS3pX9qW9K/tS3oxV/aigUOjf2rY0VntUgJoGRJXYrttdtruv0rsv6UoSkVDrT2s8jivfj
        ztiFOeJgG14w0JDazP8Aw6GUH42tGd89A1XOkRh2rAHY0c65bUSIUGjbL5tqRLvpyQWczacw7Tp2qy3p
        imeSs0zvr+qcgQ+95h2/3jUz09CIDkOGD2Rq8Lz4qYWSnAKBNZp+496zrvqC/NypEYfQBG9mCMGflC8D
        3iAd5xESoKZkYq/lqVzH1gjY2b6k0S0xTwsvxR/dBAWampqamp4mQJKyln4+7wLsYQZWKmTg7L5PEmVm
        mZXNPnUALcAb0makPkPvEPFBIalehfdjN/GGIdX7YIpaTmfsVYxQzU0CcmlIy4pHQKHPEPEx8nuyHQTD
        k8QqM50DkzQUFJwHQaEDjHGahw54KIRgHgfdjxNJgmKJHGUin8nAlTTRRjmKhHEtBxz3bywlH/Xb3az+
        eCYMs28uCDNIpwBpOBjay4xTsYGQlyhAc8A14Xg92X3eHEYhzK7X212vtrJi63Aaigiloo0BRkrqIio9
        aXk1cSiyF8Qj4sM5C5f3aJO/FMWQllqcYb8BpoKDSYxQJJbgCQ0r/wCHC5igggw/ae7n+5/NDwSo4RUV
        FNIkHnFJUVFRqTkuVuIJDSTF3FaBUY583FF7wZPfo/ij5WM+o9AQhcoQHPiDKzWfciiXeFGQEGOAHV95
        dSoaFyyPWhEkogjzpeBUa8P+7V/3KAky+hzTZt86uYPn3u3Z9FMbELUvpBRkqH5uepNHobSyFtqJk7+N
        pwS3L6cg9XaeTcsn8aUi6DtQYqF6tGLapefzowg6u1YXooZ0Jx0NrZHzyY1glqb6nay/5OuOXOeTa/ne
        HHZ+W14AFyvhr4a7ZXZK7RXaKgE5RQCdqm3Y1DUVFRUVGGNFCGNp+LTubT8VNGjc2rDo3Np3unc2ne00
        aNzad7p3PV//xAAoEQEAAQIEBwEAAgMAAAAAAAABABExECAwYCFAQVBhcfBRcJGBodH/2gAIAQIBAT8Q
        5u1pXtqWtK5tS1pXPuu1LH3TSufddqWPumlc+67UsfdNK5912owFYNdG5912ra0X/ptU5FnknknnJ5ye
        F/c8L+55ieQjE+trOY2w5ja7oH8aDt50TbxtR0x2m6Y8swdkB5FUw0yiOI7GDyJ4Za4g95c9MEyDqMCt
        olwP+yqXwUlJSUlJTAcB7u5gyJkHSUq8f6wBQMCKJWXlkHMmA94dEGIHBdEWVlVjNarOdIYHdnQEYuNf
        2EeKsCBEwUGuhpDNUr/JZi5EhDuzlMQldD94RU6YCStIsNCtKMo7mSuSzFykO7OAcg4OqkRq5A1iaIcJ
        w3MroOkDRO7OFoZKyscBjAUiwINAVVJeU4yr8g9SWFhGhBxauVyj3ZwEHMxMBiwINJxDSBlcx3dMRlZW
        VlZWUrHAIIDTTIORcx3hImCmV8eWV2ETGhKcIq8imyFJTlk1DaSahtNNvO33RNvDarom1nbznNru3g+e
        eye+ed+/xPOzzM8zA/sKtXapbbqVJ/MKysrmp6SoG07/AK07/vad/wBad/3tO9607/vad71p3/e073rT
        v+9p3vWnf983/8QAKxABAAECBAQGAwEBAQAAAAAAAREAITFBUWEQcYGRIDBgobHBUNHw4UDx/9oACAEB
        AAE/EPwGr2p8np7vq9qfJxU+Y0SsBOq04xSlSEIDLB7nppzV7U+TjJc/iYI0cyiLUAq41h8Xsd/StjSG
        3hvtT5OOzvrNO8NE0+WS5LfuBxnf01YL7U+TiCBRAXVcioxDRLVwlpWN0emrBfanycQKQmZQJjMkpes1
        cMhO282tt6VssDEtSFYCgeK5Y8kosDSESRODAkomlkbSdK2rneNqRSEJZHEfTtnI9g+TioqquL/lX999
        UJklEUoNw9Kj/McslOMRV7HxDahf2V/6JSuxYCTxiyDFIPehWCb+M6XiESRn04K918HphGLI6t3iwqQj
        spfS8uk/Ij40EhuNNmxPOuelpGZB1Lv15E5l+xbnpYk5pfVg9jyM1KB0cnvTIoRE3PSuuoHnB5MqEH9X
        7elFJxQHWgAAwMPJlwnsRidvSnMYeqfry4sR2py6ek5r/wCRH35dvJ6tqdf+YXCQz1am/hj+qlCX5uTR
        PcnzFvYkG2R9/wDDODAJDF5pWIcg/EV8haPvWID+MpppZBINsOF5Iqc+zPzUGgexPmFNuWgwpkUIgck/
        4ASQPdieBBxJpfJ0tWTU96FhDSShuZPMqBMOTk/mJpm07x9eJuU+66BS6HIvdmBSze8lY7YVdK7Z1ufL
        WhEkuPGLLK25Hr5i7helzangyX/B8KbUkGkDFCBGPC9D2pGP+5VBCN0fVSOipIgsqBa51bPvX9p4JBaz
        SIONTei5SwZGu9Bmc/y+QqSc0l8LqQcrTtowZY8AkgZn2O3EjJOHbR6VJqBNlzEnES/lMrxlcTYoQgwa
        oOCiydF9dKHgWAj1jGmwJQx0KcJyZ7Uvy5AU9xcqQK9/Md4jA7nvSTpdGGDPkz8R7TBpEYcanNG5SCIk
        jiUR2CHZ/LGFsD6HhcDBOR/68COAlen2poi6bBYu9LX7CMDc4KTBwgTYxgg0JKBqMlWct+rjeAo6E0tn
        s7+RoiI5mxUcpsQNYvL3J4AxlHBvHCUXFYMiJNDOljKLSelDxKjMAeyLhqoSEVJJITDucJJjM8EpHExq
        +Z3dOBjnPyy9tjrGDQzc8DoMF1EJ8cSoq4gs6SUlyTImwyiUYaFqjyJWatFz/wC1KjGw4rtS6AV5WzY0
        oY2UzXJ2f3UBZyqIykWmWOetP96kz6+NDVD2f7SWhDyEJaZycLekbWQSArYwKY8TCCmRzKxYDQUPgVZU
        liYy7624MwDAYBYk6x2phHO+33w9tAk0aw3xc0TE8E6TFUjooxzPr8tgcmohrljwHkZL2XKRKIRhHXgN
        MsBirYKluAjlMCf+hThFfUQiGGDTrW64DldegqBMkrnUmi4AYl3MqOZKjCb8qFrGfMuPikMqjsY+/HKG
        jHtYhjTFaEpq4NBgTwMMWVtQySNxGpWvHhjsRYEAEWCUIWRQkAjNrr7JEeF+BgUkERwLVTCdVOwfXGVG
        dsP7PAARwaQnpNGOl8H5b2j8VbMvlVmcGPgeCvYMv98G6AlySDhcaUUSpsACYwvwkmvEBD9VdSW4AHci
        heQt+4+yU5XLbgiRokMBnoNFmyEdx42g3semPtQKRwOcQHc68UUqJAEINkTEqZEA0uILuhTGBE61e8KC
        9i38Mal3Edzd4trCibl6wwgOpPgBc2TvQGQkCdD8svf+GhRkxKaKRknEwRoSt3/G9br+N6hEiqfYvI0y
        kmJTEwhEuiETGkUQQMSSgwmzUE0ZkJaQlrbAixSEOTGgxfqkaxUcn+vITjib1Fs/FL1IXoDrJXcz3u5G
        kv1TO+I+VCrCMXYdGiahYxej2d26cEJ8rZUu/hAcUHo3PCQDDN+Aen5YFOsd7cMV8ym3mJQiSYeG0cmZ
        rF1tQt4Q5urUUE+AuVJtAzYFmIoCAXSLykvyq9k8LFQRbMxhoFBXAQGx5CUywRpnFUSQsAa6m9JDJibP
        C8JKSIwowkNyl7BKXU5LM0oAACAsB4MLRZ0hi0ACAgNjw7G9+UflzgSHL96jBzpAEwa/iIoTJ3rbd62H
        ethX9hpNa8S8mUFIe9KydSE3P3QMjGcD7RV+hOV7vdqTot0pf9vQCEd11fLkRqumZ04ujAQlxGrz179W
        rjPms3I5tfLBGxt4tzQOo+vzFu6j6qVc5YnSv8Sk5xzoTBHl4IUL5fZY4KYg86ACCx5qqQ8lYKzMaOZ0
        4x5nCUwgMrrsNyPunBU0/Rf3oqc8Ag8cGZLsD+ZNIgwSoi404daESRkcGgRYJDTcFDKVOzWIOS/UV+0X
        0lE4CgBvtP8AwzD5+zR182bQCdUPr82rdOdYVJWAmeNY/wDIASEkTJK5YpoMfM/oIz9vSV24jW2Z9eZs
        J/R09JzYnvxn18veC7mfScQmb+TvbytxJ2H0oKhGEuNGPjabLPv5M01DuB9+lcefzH08nWobbCfmPSrD
        4Wmqs+1CARkbj5EQNrncfaPS0sJveX+PGgSAldilRikNJwPS2sIE3CH2fHBjDR5P6enrve/A9LDEhCkS
        6eBZLiffGZAEKY3pyu+fqv6T9U5fsUWTZSAZmpT4aQ7j0r7A+PB7D8+ETsff6UGAZAzQQHMVZkUQFh2U
        /ovun1kMoY4AU4y5GEvwDUs9PdrM8CQ07T9k0bMkgXuowTAbgiY9KAZzaXQAlXQM1tUFS1kSRKITo8f7
        Gp6awAz8wJLAmA55qi2kvzRfkgipnsjCM+P9jU9M4RRM05KgxMPKgkwKObYl2XXtIQAoCgDInH+xqems
        Db23AqwgEhEIj7SVb8CEDGWKkDTQx4/2NT01ga5wMQCnOUBc8qFQQByEQpJaQvcytw/sanprA1UaRZAm
        CJhTCBgk0WJUvH+xqfgcP//Z
</value>
  </data>
</root>